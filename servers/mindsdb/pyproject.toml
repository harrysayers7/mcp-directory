[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mindsdb-mcp-server"
version = "0.1.0"
description = "MCP server for MindsDB AI-powered data analytics"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "MCP Directory Team", email = "team@mcp-directory.dev"},
]
keywords = ["mcp", "mindsdb", "ai", "analytics", "machine-learning"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Database",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "mcp>=1.0.0",
    "fastmcp>=0.1.0",
    "mindsdb-client>=0.1.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "httpx>=0.25.0",
    "redis>=5.0.0",
    "structlog>=23.0.0",
    "tenacity>=8.0.0",
    "aiofiles>=23.0.0",
    "python-multipart>=0.0.6",
    "uvloop>=0.19.0; sys_platform != 'win32'",
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.23.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "httpx-mock>=0.1.0",
    "faker>=19.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "httpx-mock>=0.1.0",
    "faker>=19.0.0",
]

[project.urls]
Homepage = "https://github.com/mcp-directory/mindsdb-mcp-server"
Documentation = "https://mcp-directory.dev/servers/mindsdb"
Repository = "https://github.com/mcp-directory/mindsdb-mcp-server"
Issues = "https://github.com/mcp-directory/mindsdb-mcp-server/issues"

[project.scripts]
mindsdb-mcp-server = "mindsdb_mcp_server.main:main"

[tool.hatch.build.targets.wheel]
packages = ["src/mindsdb_mcp_server"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/pyproject.toml",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["mindsdb_mcp_server"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "mindsdb_client.*",
    "redis.*",
    "structlog.*",
    "tenacity.*",
    "httpx.*",
    "aiofiles.*",
    "uvloop.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src/mindsdb_mcp_server"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/.*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
